<div 
    xmlns="http://www.w3.org/1999/xhtml" 
    xmlns:tal="http://xml.zope.org/namespaces/tal"
    xmlns:metal="http://xml.zope.org/namespaces/metal"
    metal:use-macro="api.main_template.macros['master']">

  <div metal:fill-slot="content">

    <div id="slogan">
      <p>Create web applications with a bang.</p>
    </div>

    <div id="twocolumn">
      <div id="left">
        <h1 class="box">Get to know BFG</h1>
        <p>BFG is a "pay only for what you eat" Python web
        framework. You can get started easily and learn new concepts
        as you go, and only if you need them. It's simple, well
        tested, well documented, and fast.</p>
        <ul>
          <li>See the <a href="${application_url}/documentation">documentation</a></li>
          <li>Examine the code of BFG <a href="http://docs.repoze.org/bfg/index.html#sample-applications">sample applications</a></li>
          <li>Join the community on the <a href="irc://irc.freenode.net/#repoze">#repoze IRC channel</a>.</li>
        </ul>
      </div>

      <div id="right">
        <h1 class="box">Start developing now</h1>
        <h6>Install BFG on Your Computer</h6>
        <p>Get started quickly: you'll need an environment capable of
        compiling C code and the Python development libraries, as well
        as a few other dependencies.</p>
        <p><a href="http://docs.repoze.org/bfg/narr/install.html"><img src="${application_url}/static/images/site/getbfg.png" border="0" /></a></p>
      </div>
      <div id="clearboth"></div>
    </div>

    <div id="content">
      <div id="subnav">
        <div id="news"> <span class="header">Recent pastes</span>
        <ul>
          <li tal:repeat="paste pastes">
             <a href="${paste['url']}">${paste['title']}</a>
          </li>
        </ul>
        <span class="header">Recent tutorials</span>
        <ul>
          <li tal:repeat="tutorial tutorials">
            <a href="${tutorial.url}">${tutorial.title}, by ${tutorial.author} on ${tutorial.date}</a>
          </li>
        </ul>
        </div>
      </div>

      <div id="one">
        <h1>Welcome</h1>

        <p>BFG is a Python web application framework.  BFG is also
        referred to as <i>repoze.bfg</i>, as that is the package name
        of the software which comprises the framework.
        </p>

        <p>BFG shares project management and version control
        facilities with the <a href="http://repoze.org">Repoze</a>
        project, and is developed by the same primary developers, but
        its goals are different than the overall goals of the Repoze
        project.  BFG is inspired by, and uses technology from, the <a
        href="http://zope.org">Zope</a> project.
        </p>

        <h2>What makes BFG special</h2> 
        <p><b>Familiarity:</b> As web developers, we've become
        accustomed to working in very particular ways over the
        years. This framework is a canonization of practices that "fit
        our brains".</p>
        
        <p><b>Simplicity:</b> BFG attempts to be a "pay only for what
        you eat" framework in which you can be productive quickly with
        partial knowledge, in contrast to "pay up front for what
        anyone might eventually want to eat" frameworks, which tend to
        expect you to understand a great many concepts and
        technologies fully before you can be truly productive. BFG
        doesn't force you to use any particular technology to get your
        application written, and we try to keep the core set of
        concepts you need to understand to a minimum. We've thrown out
        all the cruft.</p>
        
        <p><b>Minimalism:</b> BFG provides only the very basics: URL
        to code mapping, templating, and security. There is not much
        more to the framework than these pieces: you are expected to
        provide the rest.</p>
        
        <p><b>Documentation:</b> Because BFG is so minimal, it's
        relatively easy to keep its documentation up-to-date, which is
        helpful to bring new developers up to speed. It's our goal
        that nothing remain undocumented about BFG.</p>
        
        <p><b>Speed:</b> BFG is meant to be fast, capable of serving
        on the order of 100-1000 requests per second on today's
        commodity hardware for views that do "real work" given proper
        application implementation. The "hardware is cheap" mantra has
        its limits when you're responsible for managing a great many
        machines: the fewer you need, the less pain you'll have.</p>
      </div>
    </div>
  </div>
</div>
